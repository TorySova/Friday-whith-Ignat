{"version":3,"sources":["Pages/404/Error404.module.css","SuperComponent/SuperButton/SuperButton.module.css","SuperComponent/SuperCheckbox/SuperCheckbox.module.css","SuperComponent/SuperInput/SuperInput.module.css","Header.tsx","Pages/404/Error404.tsx","Pages/CheckIn/CheckIn.tsx","Pages/Login/Login.tsx","Pages/NewPassword/NewPassword.tsx","Pages/Profile/Profile.tsx","Pages/RecoverPassword/RecoverPassword.tsx","SuperComponent/SuperButton/SuperButton.tsx","SuperComponent/SuperCheckbox/SuperCheckbox.tsx","SuperComponent/SuperInput/SuperInput.tsx","Pages/Test/Test.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Header","className","to","Error404","s","background","textContainer","text","CheckIn","Login","NewPassword","Profile","RecoverPassword","SuperButton","red","restProps","finalClassName","default","onClick","alert","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","finalInputClassName","checkbox","e","currentTarget","checked","SuperInput","onChangeText","onKeyPress","onEnter","error","setError","finalSpanClassName","errorInput","superInput","value","key","Test","PATH","Routes","path","exact","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.be1b1dd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Error404_background__xYzT_\",\"textContainer\":\"Error404_textContainer__2KIjv\",\"text\":\"Error404_text__2mE3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__26VM3\",\"red\":\"SuperButton_red__3wPsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2I_bw\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Gliw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__hkUWb\",\"errorInput\":\"SuperInput_errorInput__NTC8V\",\"error\":\"SuperInput_error__2WgyC\"};","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"item\">\r\n                <NavLink to=\"/check-in\">Регистрация</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to=\"/login\">Логин</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to=\"/new-password\">Новый пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to=\"/profile\">Профайл</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to=\"/recover-password\">Восстановить пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to=\"/test\">Test</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.textContainer}>\r\n                <div className={s.text}>\r\n                    Ой!\r\n                    Такой страницы не существует...\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CheckIn = () => {\r\n    return (\r\n        <div>\r\n            Регистрация\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Login = () => {\r\n    return (\r\n        <div>\r\n            Логинизация\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            Ввод нового пароля\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n    return (\r\n        <div>\r\n            Профайл\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const RecoverPassword = () => {\r\n    return (\r\n        <div>\r\n            Восстановить пароль\r\n        </div>\r\n    )\r\n}\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => alert(\"Hello!\")}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >click</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked); \r\n        onChange && onChange(e);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.spanClassName}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInput: React.FC<SuperInputPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError && setError('')\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n            && onEnter // и есть пропс onEnter\r\n            && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = error ? s.errorInput : s.superInput;\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInput;","import React from 'react'\r\nimport SuperButton from '../../SuperComponent/SuperButton/SuperButton'\r\nimport SuperCheckbox from '../../SuperComponent/SuperCheckbox/SuperCheckbox'\r\nimport SuperInput from '../../SuperComponent/SuperInput/SuperInput'\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInput />\r\n            <SuperButton />\r\n            <SuperCheckbox />           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Error404 } from './Pages/404/Error404'\r\nimport { CheckIn } from './Pages/CheckIn/CheckIn'\r\nimport { Login } from './Pages/Login/Login'\r\nimport { NewPassword } from './Pages/NewPassword/NewPassword'\r\nimport { Profile } from './Pages/Profile/Profile'\r\nimport { RecoverPassword } from './Pages/RecoverPassword/RecoverPassword'\r\nimport { Test } from './Pages/Test/Test'\r\n\r\nexport const PATH = {\r\n    CHECK_IN: \"/check-in\",\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    TEST: \"/test\"\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n                <Route path={PATH.CHECK_IN} render={() => <CheckIn />} />\r\n                <Route path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n                <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n                <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n                <Route path={PATH.TEST} render={() => <Test />} />\r\n\r\n                <Route render={() => <Error404 />} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport { Header } from './Header';\nimport { Routes } from './Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}