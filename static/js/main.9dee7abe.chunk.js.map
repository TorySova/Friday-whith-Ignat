{"version":3,"sources":["Pages/RecoverPassword/Forgot.module.css","Pages/404/Error404.module.css","SuperComponent/SuperInput/SuperInput.module.css","SuperComponent/SuperButton/SuperButton.module.css","SuperComponent/SuperCheckbox/SuperCheckbox.module.css","Pages/Login/Login.module.css","Pages/RecoverPassword/RecoverPassword.module.css","Pages/404/Error404.tsx","SuperComponent/SuperInput/SuperInput.tsx","api/api-register.ts","redux/registerReducer.ts","Pages/CheckIn/CheckIn.tsx","redux/profileReducer.ts","api/login-api.ts","redux/loginReducer.ts","Pages/Login/Login.tsx","api/setPassword-api.ts","redux/setPasswordReducer.ts","common/Preloader.tsx","Pages/NewPassword/SetPassword.tsx","Pages/NewPassword/SetPasswordContainer.tsx","Pages/NewPassword/NewPassword.tsx","Pages/Profile/Profile.tsx","api/forgot-api.ts","redux/forgotReducer.ts","Pages/RecoverPassword/Forgot.tsx","Pages/RecoverPassword/ForgotContainer.tsx","Pages/RecoverPassword/RecoverPassword.tsx","SuperComponent/SuperButton/SuperButton.tsx","SuperComponent/SuperCheckbox/SuperCheckbox.tsx","Pages/Test/Test.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","Error404","className","s","background","textContainer","text","SuperInput","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","instance","axios","create","baseURL","registerAPI","data","post","initialState","isRegistered","isRegisteredAC","type","CheckIn","React","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","dispatch","useDispatch","useSelector","state","register","to","placeholder","onClick","newUserData","then","response","status","alert","catch","initState","user","_id","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","LoginAPI","loginInitState","isLoggedIn","Login","login","setRememderMe","setEmailCallback","useCallback","setPassCallback","setRememberCallback","checked","loggInCallback","res","console","log","SetPassAPI","resetPasswordToken","SetPassInitState","loading","success","setLoading","Preloader","SetPassword","memo","pass","setPass","pass2","setPass2","disabled","SetPasswordContainer","token","useParams","a","finally","setPasswordTC","store","NewPassword","Profile","profile","ForgotAPI","from","message","ForgotInitState","Forgot","forgot","ForgotContainer","forgotCallback","forgotTC","RecoverPassword","wrapper","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","Test","PATH","Routes","path","exact","render","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9dee7abe.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Forgot_error__36tR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Error404_background__xYzT_\",\"textContainer\":\"Error404_textContainer__2KIjv\",\"text\":\"Error404_text__2mE3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__hkUWb\",\"errorInput\":\"SuperInput_errorInput__NTC8V\",\"error\":\"SuperInput_error__2WgyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__26VM3\",\"red\":\"SuperButton_red__3wPsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2I_bw\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Gliw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1XNev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RecoverPassword_wrapper__2SXsk\"};","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.textContainer}>\r\n                <div className={s.text}>\r\n                    Ой!<br />\r\n                    Такой страницы не существует...\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInput: React.FC<SuperInputPropsType> = (\r\n    {\r\n        // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError && setError('')\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n            && onEnter // и есть пропс onEnter\r\n            && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = error ? s.errorInput : s.superInput;\r\n    return (\r\n        <>\r\n            <input\r\n                \r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInput;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n    //baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n});\r\n\r\nexport type regNewUserDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype ResponseType = {\r\n    status: number\r\n}\r\n\r\nexport const registerAPI = {\r\n    regNewUser(data: regNewUserDataType) {\r\n        return instance.post<ResponseType>('auth/register', data);\r\n    },\r\n}","import {registerAPI, regNewUserDataType} from \"../api/api-register\";\r\n\r\nconst initialState = {\r\n    isRegistered: false\r\n\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTER-REDUCER/IS-REGISTERED-AC':\r\n            return {...state, isRegistered: action.isRegistered}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\n// export const createUser = (newUser: any) =>\r\n//     ({type: 'REGISTER-REDUCER/CREATE-USER', newUser} as const)\r\n\r\nexport const isRegisteredAC = (isRegistered: boolean) =>\r\n    ({type: 'REGISTER-REDUCER/IS-REGISTERED-AC', isRegistered} as const)\r\n\r\n// thunks\r\nexport const registerNewUserTC = (newUserData: regNewUserDataType) => (dispatch: any) => {\r\n    registerAPI.regNewUser(newUserData)\r\n        .then( response => {\r\n            if (response.status === 201) {\r\n                dispatch(isRegisteredAC(true));\r\n            } else {\r\n                dispatch(isRegisteredAC(false));\r\n                alert(response.status);\r\n            }\r\n        })\r\n        .catch( (error) => {\r\n            alert(error)\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType =\r\n    | ReturnType<typeof isRegisteredAC>\r\n  //| ReturnType<typeof createUser>","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {registerNewUserTC} from \"../../redux/registerReducer\";\r\n\r\n\r\nexport const CheckIn = () => {\r\n\r\n    const [email, setEmail] = React.useState(\"\");\r\n    const [password, setPassword] = React.useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const isRegisteredValue = useSelector<AppStoreType, boolean>(state => state.register.isRegistered)\r\n\r\n    const addNewUser = () => {\r\n        if (password === confirmPassword) {\r\n            dispatch(registerNewUserTC({email, password}));\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n        } else {\r\n            alert(\"Пароли не совпадают!\")\r\n        }\r\n\r\n    }\r\n\r\n    if (isRegisteredValue) {\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <p>введите почту:</p><SuperInput type={\"text\"} placeholder={\"e-mail\"} value={email} onChangeText={setEmail}/>\r\n            </div>\r\n            <div>\r\n                <p>введите пароль:</p><SuperInput type={\"password\"} placeholder={\"password\"} value={password} onChangeText={setPassword}/>\r\n            </div>\r\n            <div>\r\n                <p>подтвердите пароль:</p><SuperInput type={\"password\"} placeholder={\"confirm the password\"} value={confirmPassword} onChangeText={setConfirmPassword}/>\r\n            </div>\r\n            <button onClick={addNewUser}>Зарегистрироваться</button>\r\n        </div>\r\n    )\r\n}\r\n","export type UserType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\t\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nexport type ProfileStateType = {\r\n    user: UserType\r\n}\r\n\r\nconst initState: ProfileStateType = {\r\n    user: {\r\n        _id: '0',\r\n        email: '',\r\n        name: 'test',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n\r\n        error: '',\r\n    }\r\n};\r\n\r\nexport const profileReducer = (state = initState, action: ProfileActionsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET_PROFILE': {\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setProfileAC>;\r\n\r\nexport const setProfileAC = (user: UserType) => ({\r\n    type: 'profile/SET_PROFILE',\r\n    user\r\n} as const); ","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'http://localhost:7542/2.0/'\r\n}); \r\n\r\nexport const LoginAPI = {\r\n    login(data: LoginParamsType){\r\n        return instance.post('/auth/login', data)\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","import { setProfileAC } from './profileReducer';\r\nimport { LoginParamsType } from './../api/login-api';\r\nimport { Dispatch } from 'redux'\r\nimport { LoginAPI } from '../api/login-api';\r\n\r\nexport type LoginStateType = {\r\n    isLoggedIn: boolean;\r\n    error: string\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    isLoggedIn: false,\r\n    error: ''\r\n};\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET_IS_LOGGED_IN\": {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn,\r\n            }\r\n        }\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport type LoginActionsType = ReturnType<typeof setIsLoggedIn> | ReturnType<typeof setError> | ReturnType<typeof setProfileAC>\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({\r\n    type: 'login/SET_IS_LOGGED_IN',\r\n    isLoggedIn,\r\n} as const);\r\n\r\nexport const setError = (error: string) => ({\r\n    type: 'login/SET_ERROR',\r\n    error\r\n} as const);\r\n\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<LoginActionsType>) => {\r\n\r\n    return LoginAPI.login(data)\r\n        .then(res => {\r\n            if (res.data.error) {\r\n                dispatch(setError(res.data.error))\r\n            } else {\r\n                dispatch(setProfileAC(res.data))\r\n                dispatch(setIsLoggedIn(true))\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setError(e.response.data.error + ' more details in the console'))\r\n            console.log('Error:', { ...e });\r\n        })\r\n}\r\n\r\n\r\n","import React, { ChangeEvent, useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loginTC } from '../../redux/loginReducer'\r\nimport { AppStoreType } from '../../redux/store'\r\nimport SuperInput from '../../SuperComponent/SuperInput/SuperInput'\r\nimport s from './Login.module.css'\r\n\r\nexport const Login = () => {\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememderMe] = useState(false)\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value),\r\n        [setPassword]\r\n    );\r\n    const setRememberCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setRememderMe (e.currentTarget.checked),\r\n        [setRememderMe ]\r\n    );\r\n    const loggInCallback = useCallback(() => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }, [email, password, rememberMe, dispatch])\r\n       \r\n    if(isLoggedIn){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n       \r\n    return (\r\n        <div>\r\n            {error ? <div className={s.error}>{error}</div> : ''}\r\n            <p>введите почту:</p><SuperInput type={'text'} placeholder={'email'} value={email} onChange={setEmailCallback}/>\r\n            <p>введите пароль:</p><SuperInput type={'password'} placeholder={'password'} value={password} onChange={setPassCallback}/>\r\n            <p><input type={'checkbox'} checked={rememberMe} onChange={setRememberCallback}/> remember me</p>\r\n            <p><button onClick={loggInCallback}>login</button></p>\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n});\r\nexport type RegisterDataType = {\r\n    error: string\r\n}\r\n\r\nexport const SetPassAPI = {\r\n    setPass(resetPasswordToken: string, password: string)  {\r\n        return instance.post<RegisterDataType>('/auth/set-new-password', {resetPasswordToken, password}\r\n        )\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {SetPassAPI} from \"../api/setPassword-api\";\r\n\r\nexport type SetPassStateType = {\r\n    loading: boolean\r\n    success: boolean\r\n    error: string\r\n}\r\n\r\nexport const SetPassInitState: SetPassStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const setPassReducer = (state = SetPassInitState, action: SetPassActionsType): SetPassStateType => {\r\n    switch (action.type) {\r\n        case \"setPassword/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case \"setPassword/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            }\r\n        }\r\n        case \"setPassword/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport type SetPassActionsType = ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setError>\r\n\r\n\r\nexport const setLoading = (loading: boolean) => ({type: \"setPassword/SET_LOADING\", loading} as const)\r\nexport const setSuccess = (success: boolean) => ({type: \"setPassword/SET_SUCCESS\", success} as const)\r\nexport const setError = (error: string) => ({type: \"setPassword/SET_ERROR\", error} as const)\r\n\r\n\r\nexport const setPasswordTC = (token: string, password: string, pass2: string) => async (dispatch: Dispatch<SetPassActionsType>) => {\r\n    dispatch(setLoading(true));\r\n    if (password !== pass2) {\r\n        dispatch(setError(\"Passwords don't match!\"))\r\n        dispatch(setLoading(false))\r\n    }\r\n    else {\r\n        return SetPassAPI.setPass(token, password)\r\n            .then (() => {\r\n                dispatch(setSuccess(true))\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setError(e.response.data.error + ' more details in the console'))\r\n                console.log('Error: ', e.response.data.error)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setLoading(false))\r\n            })\r\n    }\r\n};","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport s from \"../RecoverPassword/Forgot.module.css\";\r\n\r\n\r\ntype SetPassPropsType = {\r\n    pass: string\r\n    setPass: (pass: string) => void\r\n    pass2: string\r\n    setPass2: (pass2: string) => void\r\n    setPassCallback: () => void\r\n    loading: boolean\r\n    error: string\r\n};\r\n\r\nconst SetPassword: React.FC<SetPassPropsType> = React.memo((\r\n    {pass, setPass, pass2, setPass2, setPassCallback, loading, error}) => {\r\n    return (\r\n        <>\r\n            {error && <div className={s.error}>{error}</div>}\r\n            <div><SuperInput value={pass} onChangeText={setPass}/></div>\r\n            <div><SuperInput value={pass2} onChangeText={setPass2}/></div>\r\n            <div><button onClick={setPassCallback} disabled={loading}>Установить пароль</button></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SetPassword;","import React, {useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {setPasswordTC} from \"../../redux/setPasswordReducer\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport SetPassword from \"./SetPassword\";\r\n\r\nconst SetPasswordContainer = React.memo(() => {\r\n        const [pass, setPass] = useState<string>(\"\");\r\n        const [pass2, setPass2] = useState<string>(\"\");\r\n        const {token}: any = useParams();\r\n\r\n        const dispatch = useDispatch();\r\n        const setPassCallback = useCallback(\r\n            () => dispatch(setPasswordTC(token, pass, pass2)),\r\n            [pass, pass2, dispatch]\r\n        );\r\n        const {loading, error} = useSelector((store: AppStoreType) => store.setPassword);\r\n        return (\r\n            <>\r\n                {loading && <Preloader/>}\r\n                <SetPassword\r\n                    pass={pass} setPass={setPass}\r\n                    pass2={pass2} setPass2={setPass2}\r\n                    setPassCallback={setPassCallback}\r\n                    loading={loading}\r\n                    error={error}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SetPasswordContainer;","import React from 'react'\r\nimport SetPasswordContainer from \"./SetPasswordContainer\";\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>Смена пароля</h1>\r\n            <SetPasswordContainer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStoreType } from '../../redux/store'\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n    // const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const name = useSelector<AppStoreType, string>(store => store.profile.user.name)\r\n\r\n    // if(!isLoggedIn){\r\n    //     debugger\r\n    //     return <Redirect to={'/login'}/>\r\n    // }\r\n    return (\r\n        <div>\r\n            Профайл\r\n            <div>\r\n                name: {name}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/'\r\n});\r\n\r\nexport const ForgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post<ForgotDataType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                    password recovery link: \r\n                        <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n                    </div>\r\n                    `\r\n        })\r\n    }\r\n}\r\n\r\nexport type ForgotDataType = {\r\n    error: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotAPI} from \"../api/forgot-api\";\r\n\r\nexport type ForgotStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const ForgotInitState: ForgotStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n\r\nexport const forgotReducer = (state = ForgotInitState, action: ForgotActionsType): ForgotStateType => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\": {\r\n            debugger\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case \"forgot/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case \"forgot/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\nexport type ForgotActionsType = ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setError>\r\n\r\n\r\nexport const setLoading = (loading: boolean) => ({\r\n    type: \"forgot/SET_LOADING\",\r\n    loading,\r\n} as const)\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: \"forgot/SET_SUCCESS\",\r\n    success,\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: \"forgot/SET_ERROR\",\r\n    error,\r\n} as const)\r\n\r\nexport const forgotTC = (email: string) => (dispatch: Dispatch<ForgotActionsType>) => {\r\n    dispatch(setLoading(true))\r\n    return ForgotAPI.forgot(email)\r\n        .then(() => {\r\n            dispatch(setSuccess(true))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setError(e.response.data.error + ' more details in the console'))\r\n            console.log('Error: ', e.response.data.error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport s from './Forgot.module.css'\r\n\r\ntype ForgotPropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    forgot: () => void\r\n    loading: boolean\r\n    error: string\r\n};\r\n\r\nconst Forgot: React.FC<ForgotPropsType> = React.memo(({email, setEmail, forgot, loading, error}) => {\r\n    return (\r\n        <>\r\n            {error && <div className={s.error}>{error}</div>}\r\n            <div><SuperInput  value={email} onChangeText={setEmail} type={\"email\"}/></div>\r\n            <div><button onClick={forgot} disabled={loading}>Отправить</button></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Forgot;","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {forgotTC} from \"../../redux/forgotReducer\";\r\nimport Forgot from \"./Forgot\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\nconst ForgotContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const error = useSelector((store: AppStoreType) => store.forgot.error);\r\n    debugger\r\n    const dispatch = useDispatch();\r\n    const forgotCallback = useCallback(\r\n        () => dispatch(forgotTC(email)),\r\n        [email, dispatch]\r\n    );\r\n    const loading = useSelector((store: AppStoreType) => store.forgot.loading)\r\n    return (\r\n        <>\r\n        {loading && <Preloader/>}\r\n        <Forgot\r\n            email={email} setEmail={setEmail}\r\n            forgot={forgotCallback}\r\n            loading={loading}\r\n            error={error}\r\n        />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ForgotContainer;","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport ForgotContainer from \"./ForgotContainer\";\r\nimport s from './RecoverPassword.module.css'\r\n\r\n\r\nexport const RecoverPassword = () => {\r\n    const success = useSelector((store: AppStoreType) => store.forgot.success);\r\n\r\ndebugger\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div><h1>Восстановление пароля</h1></div>\r\n            {success\r\n                ? <div>click the link in the message in your email</div>\r\n                : <ForgotContainer/>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => alert(\"Hello!\")}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >click</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked); \r\n        onChange && onChange(e);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.spanClassName}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React from 'react'\r\nimport SuperButton from '../../SuperComponent/SuperButton/SuperButton'\r\nimport SuperCheckbox from '../../SuperComponent/SuperCheckbox/SuperCheckbox'\r\nimport SuperInput from '../../SuperComponent/SuperInput/SuperInput'\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInput />\r\n            <SuperButton />\r\n            <SuperCheckbox />           \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Error404 } from './Pages/404/Error404'\r\nimport { CheckIn } from './Pages/CheckIn/CheckIn'\r\nimport { Login } from './Pages/Login/Login'\r\nimport { NewPassword } from './Pages/NewPassword/NewPassword'\r\nimport { Profile } from './Pages/Profile/Profile'\r\nimport { RecoverPassword } from './Pages/RecoverPassword/RecoverPassword'\r\nimport { Test } from './Pages/Test/Test'\r\n\r\nexport const PATH = {\r\n    CHECK_IN: \"/check-in\",\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    TEST: \"/test\"\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n                <Route path={PATH.CHECK_IN} render={() => <CheckIn />} />\r\n                <Route path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n                <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n                <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n                <Route path={PATH.TEST} render={() => <Test />} />\r\n\r\n                <Route render={() => <Error404 />} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PATH } from './Routes'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.CHECK_IN}>Регистрация</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.LOGIN}>Логин</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.NEW_PASSWORD}>Новый пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.PROFILE}>Профайл</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.RECOVER_PASSWORD}>Восстановить пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.TEST}>Test</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport { Header } from './Header';\nimport { Routes } from './Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { loginReducer } from './loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport { registerReducer } from \"./registerReducer\";\r\nimport {forgotReducer} from \"./forgotReducer\";\r\nimport {setPassReducer} from \"./setPasswordReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profile: profileReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    setPassword: setPassReducer\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\nwindow.store = store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}