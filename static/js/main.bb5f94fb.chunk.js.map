{"version":3,"sources":["redux/searchReducer.ts","Pages/404/Error404.tsx","SuperComponent/SuperInput/SuperInput.tsx","api/instance.ts","api/register-api.ts","redux/registerReducer.ts","Pages/CheckIn/CheckIn.tsx","redux/profileReducer.ts","api/login-api.ts","redux/loginReducer.ts","Pages/Login/Login.tsx","api/setPassword-api.ts","redux/setPasswordReducer.ts","common/Preloader.tsx","Pages/NewPassword/SetPassword.tsx","Pages/NewPassword/SetPasswordContainer.tsx","Pages/NewPassword/NewPassword.tsx","common/Table/Table.tsx","api/packs-api.ts","redux/packsReducer.ts","api/cards-api.ts","api/grades-api.ts","redux/cardsReducer.ts","common/Search/CardsSearchCountDoubleRange.tsx","Pages/Packs/Packs.tsx","Pages/Profile/Profile.tsx","api/forgot-api.ts","redux/forgotReducer.ts","Pages/RecoverPassword/Forgot.tsx","Pages/RecoverPassword/ForgotContainer.tsx","Pages/RecoverPassword/RecoverPassword.tsx","SuperComponent/SuperButton/SuperButton.tsx","SuperComponent/SuperCheckbox/SuperCheckbox.tsx","Pages/Test/Test.tsx","Pages/Cards/Cards.tsx","Pages/modals/InputModal.tsx","Pages/modals/QuestionModals.tsx","Pages/modals/SimpleModal.tsx","Pages/modals/SnackBar.tsx","Pages/modals/Modals.tsx","Pages/Grades/Grades.tsx","Pages/Learning/Learn.tsx","Routes.tsx","Header.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","Pages/modals/Modals.module.css","Pages/RecoverPassword/Forgot.module.css","Pages/404/Error404.module.css","SuperComponent/SuperInput/SuperInput.module.css","SuperComponent/SuperButton/SuperButton.module.css","SuperComponent/SuperCheckbox/SuperCheckbox.module.css","Pages/Login/Login.module.css","Pages/RecoverPassword/RecoverPassword.module.css"],"names":["ACTIONS_TYPE","Error404","className","s","background","textContainer","text","SuperInput","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","instance","axios","create","withCredentials","baseURL","registerAPI","data","post","initialState","isRegistered","isRequest","isRequestAC","type","CheckIn","React","useState","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","useSelector","state","register","dispatch","useDispatch","to","PATH","LOGIN","placeholder","onClick","newUserData","length","alert","then","response","status","catch","disabled","initState","user","_id","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","LoginAPI","loginInitState","isLoggedIn","Login","login","setRememderMe","setEmailCallback","useCallback","setPassCallback","setRememberCallback","checked","loggInCallback","res","console","log","SetPassAPI","resetPasswordToken","SetPassInitState","loading","success","setLoading","Preloader","SetPassword","memo","pass","setPass","pass2","setPass2","SetPasswordContainer","token","useParams","a","finally","setPasswordTC","store","NewPassword","Table","props","packs","header","Object","keys","map","toUpperCase","el","values","id","update","delete","isLinkToCards","packId","link","CARDS","PacksAPI","params","get","userId","packName","min","max","sortPacks","page","pageCount","cardsPack","put","cardPacks","user_id","path","cardsCount","grade","shots","rating","__v","currentPage","totalCount","setUserId","getPacksThunk","getState","search","searchByName","minCount","maxCount","payload","cardPacksTotalCount","message","CardsAPI","cardsPack_id","newCard","card","CurrentCard","cardId","gradesAPI","cards","answer","question","more_id","getCardsThunk","sortItem","CardsSearchCountDoubleRange","setNewCount","newCount","RANGE_MIN_MAX_COUNT","step","renderTrack","children","onMouseDown","onTouchStart","style","height","display","width","margin","ref","borderRadius","getTrackBackground","colors","alignSelf","renderThumb","index","isDragged","backgroundColor","justifyContent","alignItems","boxShadow","position","top","color","fontWeight","fontSize","fontFamily","padding","toFixed","Packs","packsData","pack","author","user_name","profile","useEffect","rowsPerPage","onChangeSearch","SEARCH_BY_NAME","updatePackThunk","deletePackThunk","packIdAC","Pagination","count","Math","ceil","defaultPage","boundaryCount","event","showFirstButton","showLastButton","Profile","ForgotAPI","from","NEW_PASSWORD","ForgotInitState","Forgot","forgot","ForgotContainer","forgotCallback","forgotTC","RecoverPassword","wrapper","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","checkbox","Test","Cards","cardsData","getCardsData","updateCardThunk","deleteCardThunk","InputModal","open","setOpen","setText","handleClose","Button","variant","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","TextField","autoFocus","label","fullWidth","DialogActions","Transition","forwardRef","Slide","direction","QuestionModals","setAnswer","TransitionComponent","keepMounted","aria-describedby","DialogContentText","SimpleModals","Alert","elevation","SnackBar","openSuccess","setOpenSuccess","openError","setOpenError","openMessage","setOpenMessage","reason","item","Snackbar","autoHideDuration","severity","Modals","modals","Grades","gradeOfQuestionHandler","card_id","updatedGrade","updateGradeOfCard","getCard","sum","reduce","acc","rand","random","i","newSum","Learn","isChecked","setIsChecked","first","setFirst","setCard","CHECK_IN","PROFILE","RECOVER_PASSWORD","PACKS","TEST","MODALS","LEARN","Routes","exact","render","Header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","SORT","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.bb5f94fb.chunk.js","sourcesContent":["export enum ACTIONS_TYPE {\r\n    SEARCH_BY_NAME = 'Search/SEARCH_BY_NAME',\r\n    RANGE_MIN_MAX_COUNT = 'Search/RANGE_MIN_MAX_COUNT',\r\n    SORT = 'Search/SORT',\r\n}\r\n\r\nexport type SearchType = {\r\n    minCount: number\r\n    maxCount: number\r\n    searchByName: string\r\n    sortItem: string\r\n}\r\nconst initState: SearchType = {\r\n    minCount: 0,\r\n    maxCount: 13,\r\n    searchByName: '',\r\n    sortItem: ''\r\n\r\n}\r\n\r\nexport const searchReducer = (state: SearchType = initState, action: ActionsType): SearchType => {\r\n    switch (action.type) {\r\n        case ACTIONS_TYPE.SEARCH_BY_NAME: {\r\n            return {\r\n                ...state,\r\n                searchByName: action.searchByName\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.RANGE_MIN_MAX_COUNT: {\r\n            return {\r\n                ...state,\r\n                minCount: action.minCount,\r\n                maxCount: action.maxCount\r\n            }\r\n        }\r\n        case ACTIONS_TYPE.SORT: {\r\n            // let newState: Array<cardsPack> = []\r\n            // if (action.sortItem === 'up') {\r\n            //     newState = state.sort((a: cardsPack, b: cardsPack) => {\r\n            //         if(nameA < nameB) {\r\n            //             return -1\r\n            //         }\r\n            //         if(nameA > nameB) {\r\n            //             return 1\r\n            //         }\r\n            //         return 0;\r\n            //     })\r\n            //     return state;\r\n            // }\r\n            // if(action.sortItem === 'down') {\r\n            //     newState = state.sort((a: cardsPack, b: cardsPack): any => {\r\n            //         if(nameB < nameA) {\r\n            //             return -1\r\n            //         }\r\n            //         if(nameB > nameA) {\r\n            //             return 1\r\n            //         }\r\n            //         return 0;\r\n            //     })\r\n            //     return state;\r\n            // }\r\n\r\n            return {\r\n                ...state,\r\n                sortItem: action.sortItem\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\ntype ActionsType = SearchACType | MinMaxCountType | SortACType\r\n\r\nexport type SearchACType = {\r\n    type: ACTIONS_TYPE.SEARCH_BY_NAME,\r\n    searchByName: string\r\n}\r\nexport type MinMaxCountType = {\r\n    type: ACTIONS_TYPE.RANGE_MIN_MAX_COUNT,\r\n    minCount: number,\r\n    maxCount: number\r\n}\r\nexport type SortACType = {\r\n    type: ACTIONS_TYPE.SORT,\r\n    sortItem: string\r\n}\r\n\r\nexport const searchAC = (searchByName: string) =>\r\n    ({type: ACTIONS_TYPE.SEARCH_BY_NAME, searchByName} as const)\r\n\r\nexport const minMaxCountAC = (minCount: number, maxCount: number) =>\r\n    ({type: ACTIONS_TYPE.RANGE_MIN_MAX_COUNT, minCount, maxCount} as const)\r\n\r\nexport const sortAC = (sortItem: string) =>\r\n    ({type: ACTIONS_TYPE.SORT, sortItem} as const)","import React from 'react'\r\nimport s from './Error404.module.css'\r\n\r\nexport const Error404 = () => {\r\n    return (\r\n        <div className={s.background}>\r\n            <div className={s.textContainer}>\r\n                <div className={s.text}>\r\n                    Ой!<br />\r\n                    Такой страницы не существует...\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent } from \"react\";\r\nimport s from \"./SuperInput.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n    setError?: (error: string) => void\r\n};\r\n\r\nconst SuperInput: React.FC<SuperInputPropsType> = (\r\n    {\r\n        // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n        setError,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n            && onChange(e); // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n        setError && setError('')\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n            && onEnter // и есть пропс onEnter\r\n            && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    // const finalInputClassName = `${s.errorInput} ${className}`; // need to fix with (?:) and s.superInput\r\n    const finalInputClassName = error ? s.errorInput : s.superInput;\r\n    return (\r\n        <>\r\n            <input\r\n                \r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInput;","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n    withCredentials: true,\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\"\r\n\r\n});","import { instance } from \"./instance\";\r\n\r\nexport const registerAPI = {\r\n    regNewUser(data: regNewUserDataType) {\r\n        return instance.post<ResponseType>('auth/register', data);\r\n    },\r\n}\r\n\r\n//types\r\nexport type regNewUserDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype ResponseType = {\r\n    status: number\r\n}","import {registerAPI, regNewUserDataType} from \"../api/register-api\";\r\n\r\nconst initialState = {\r\n    isRegistered: false,\r\n    isRequest: false,\r\n}\r\n\r\nexport const registerReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'REGISTER-REDUCER/IS-REGISTERED-AC':\r\n            return {...state, isRegistered: action.isRegistered}\r\n        case 'REGISTER-REDUCER/IS-REQUEST-AC':\r\n            return {...state, isRequest: action.isRequest}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const isRegisteredAC = (isRegistered: boolean) => ({type: 'REGISTER-REDUCER/IS-REGISTERED-AC', isRegistered} as const);\r\nexport const isRequestAC = (isRequest: boolean) => ({type: 'REGISTER-REDUCER/IS-REQUEST-AC', isRequest} as const);\r\n\r\n\r\n// thunks\r\nexport const registerNewUserTC = (newUserData: regNewUserDataType) => (dispatch: any) => {\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    dispatch(isRequestAC(true))\r\n    registerAPI.regNewUser(newUserData)\r\n        .then( response => {\r\n            if (response.status === 201) {\r\n                dispatch(isRegisteredAC(true));\r\n                dispatch(isRequestAC(false))\r\n            }\r\n        })\r\n        .catch( (error) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            alert(error.response.data.error);\r\n        })\r\n}\r\n\r\n// types\r\ntype InitialStateType = typeof initialState;\r\ntype ActionsType =\r\n    | ReturnType<typeof isRegisteredAC>\r\n    | ReturnType<typeof isRequestAC>","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport {registerNewUserTC} from \"../../redux/registerReducer\";\r\nimport {PATH} from \"../../Routes\";\r\n\r\nexport const CheckIn = () => {\r\n\r\n    const [email, setEmail] = React.useState<string>(\"\");\r\n    const [password, setPassword] = React.useState<string>(\"\");\r\n    const [confirmPassword, setConfirmPassword] = React.useState<string>(\"\");\r\n\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.register.isRegistered);\r\n    const isRequest = useSelector<AppStoreType, boolean>(state => state.register.isRequest);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const addNewUser = () => {\r\n        if (password.length < 7) {\r\n            alert(\"Длина пароля должна быть 7 или более символов!\");\r\n        } else if (password !== confirmPassword) {\r\n            alert(\"Пароли не совпадают!\");\r\n        } else {\r\n            dispatch(registerNewUserTC({email, password}));\r\n            setEmail(\"\");\r\n            setPassword(\"\");\r\n            setConfirmPassword(\"\");\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>введите почту:</div><SuperInput type={\"text\"} placeholder={\"e-mail\"} value={email} onChangeText={setEmail}/>\r\n            </div>\r\n            <div>\r\n                <div>введите пароль:</div><SuperInput type={\"password\"} placeholder={\"password\"} value={password} onChangeText={setPassword}/>\r\n            </div>\r\n            <div>\r\n                <div>подтвердите пароль:</div><SuperInput type={\"password\"} placeholder={\"confirm the password\"} value={confirmPassword} onChangeText={setConfirmPassword}/>\r\n            </div>\r\n            <button onClick={addNewUser} disabled={isRequest}>Зарегистрироваться</button>\r\n        </div>\r\n    )\r\n}\r\n","export type UserType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number; // количество колод\r\n    created: Date;\r\n    updated: Date;\r\n    isAdmin: boolean;\r\n    verified: boolean; // подтвердил ли почту\t\r\n    rememberMe: boolean;\r\n\r\n    error?: string;\r\n}\r\n\r\nexport type ProfileStateType = {\r\n    user: UserType\r\n}\r\n\r\nconst initState: ProfileStateType = {\r\n    user: {\r\n        _id: '',\r\n        email: '',\r\n        name: 'test',\r\n        avatar: '',\r\n        publicCardPacksCount: 0,\r\n        created: new Date(),\r\n        updated: new Date(),\r\n        isAdmin: false,\r\n        verified: false,\r\n        rememberMe: false,\r\n\r\n        error: '',\r\n    }\r\n};\r\n\r\nexport const profileReducer = (state = initState, action: ProfileActionsType): ProfileStateType => {\r\n    switch (action.type) {\r\n        case 'profile/SET_PROFILE': {\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport type ProfileActionsType = ReturnType<typeof setProfileAC>;\r\n\r\nexport const setProfileAC = (user: UserType) => ({\r\n    type: 'profile/SET_PROFILE',\r\n    user\r\n} as const); ","import { instance } from \"./instance\"\r\n\r\n\r\nexport const LoginAPI = {\r\n    login(data: LoginParamsType){\r\n        return instance.post('/auth/login', data)\r\n    }\r\n}\r\n\r\nexport type LoginParamsType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}","import { setProfileAC } from './profileReducer';\r\nimport { LoginParamsType } from './../api/login-api';\r\nimport { Dispatch } from 'redux'\r\nimport { LoginAPI } from '../api/login-api';\r\n\r\nexport type LoginStateType = {\r\n    isLoggedIn: boolean;\r\n    error: string\r\n}\r\n\r\nexport const loginInitState: LoginStateType = {\r\n    isLoggedIn: false,\r\n    error: ''\r\n};\r\n\r\nexport const loginReducer = (state = loginInitState, action: LoginActionsType): LoginStateType => {\r\n    switch (action.type) {\r\n        case \"login/SET_IS_LOGGED_IN\": {\r\n            return {\r\n                ...state,\r\n                isLoggedIn: action.isLoggedIn,\r\n            }\r\n        }\r\n        case 'login/SET_ERROR': {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport type LoginActionsType = ReturnType<typeof setIsLoggedIn> | ReturnType<typeof setError> | ReturnType<typeof setProfileAC>\r\n\r\nexport const setIsLoggedIn = (isLoggedIn: boolean) => ({\r\n    type: 'login/SET_IS_LOGGED_IN',\r\n    isLoggedIn,\r\n} as const);\r\n\r\nexport const setError = (error: string) => ({\r\n    type: 'login/SET_ERROR',\r\n    error\r\n} as const);\r\n\r\nexport const loginTC = (data: LoginParamsType) => (dispatch: Dispatch<LoginActionsType>) => {\r\n\r\n    return LoginAPI.login(data)\r\n        .then(res => {\r\n            if (res.data.error) {\r\n                dispatch(setError(res.data.error))\r\n            } else {\r\n                dispatch(setProfileAC(res.data))\r\n                dispatch(setIsLoggedIn(true))\r\n            }\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setError(e.response.data.error + ' more details in the console'))\r\n            console.log('Error:', { ...e });\r\n        })\r\n}\r\n\r\n\r\n","import React, { ChangeEvent, useCallback, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { loginTC } from '../../redux/loginReducer'\r\nimport { AppStoreType } from '../../redux/store'\r\nimport SuperInput from '../../SuperComponent/SuperInput/SuperInput'\r\nimport s from './Login.module.css'\r\n\r\nexport const Login = () => {\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState<string>('')\r\n    const [password, setPassword] = useState<string>('')\r\n    const [rememberMe, setRememderMe] = useState(false)\r\n\r\n    const setEmailCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setEmail(e.currentTarget.value),\r\n        [setEmail]\r\n    );\r\n    const setPassCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setPassword(e.currentTarget.value),\r\n        [setPassword]\r\n    );\r\n    const setRememberCallback = useCallback(\r\n        (e: ChangeEvent<HTMLInputElement>) => setRememderMe (e.currentTarget.checked),\r\n        [setRememderMe ]\r\n    );\r\n    const loggInCallback = useCallback(() => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }, [email, password, rememberMe, dispatch])\r\n       \r\n    if(isLoggedIn){\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n       \r\n    return (\r\n        <div>\r\n            {error ? <div className={s.error}>{error}</div> : ''}\r\n            <div>введите почту:</div><SuperInput type={'text'} placeholder={'email'} value={email} onChange={setEmailCallback}/>\r\n            <div>введите пароль:</div><SuperInput type={'password'} placeholder={'password'} value={password} onChange={setPassCallback}/>\r\n            <div><input type={'checkbox'} checked={rememberMe} onChange={setRememberCallback}/> remember me</div>\r\n            <div><button onClick={loggInCallback}>login</button></div>\r\n        </div>\r\n    )\r\n}\r\n","import { instance } from \"./instance\"\r\n\r\nexport type RegisterDataType = {\r\n    error: string\r\n}\r\n\r\nexport const SetPassAPI = {\r\n    setPass(resetPasswordToken: string, password: string)  {\r\n        return instance.post<RegisterDataType>('/auth/set-new-password', {resetPasswordToken, password}\r\n        )\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {SetPassAPI} from \"../api/setPassword-api\";\r\n\r\nexport type SetPassStateType = {\r\n    loading: boolean\r\n    success: boolean\r\n    error: string\r\n}\r\n\r\nexport const SetPassInitState: SetPassStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const setPassReducer = (state = SetPassInitState, action: SetPassActionsType): SetPassStateType => {\r\n    switch (action.type) {\r\n        case \"setPassword/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case \"setPassword/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                loading: action.loading,\r\n            }\r\n        }\r\n        case \"setPassword/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport type SetPassActionsType = ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setError>\r\n\r\n\r\nexport const setLoading = (loading: boolean) => ({type: \"setPassword/SET_LOADING\", loading} as const)\r\nexport const setSuccess = (success: boolean) => ({type: \"setPassword/SET_SUCCESS\", success} as const)\r\nexport const setError = (error: string) => ({type: \"setPassword/SET_ERROR\", error} as const)\r\n\r\n\r\nexport const setPasswordTC = (token: string, password: string, pass2: string) => async (dispatch: Dispatch<SetPassActionsType>) => {\r\n    dispatch(setLoading(true));\r\n    if (password !== pass2) {\r\n        dispatch(setError(\"Passwords don't match!\"))\r\n        dispatch(setLoading(false))\r\n    }\r\n    else {\r\n        return SetPassAPI.setPass(token, password)\r\n            .then (() => {\r\n                dispatch(setSuccess(true))\r\n            })\r\n            .catch((e) => {\r\n                dispatch(setError(e.response.data.error + ' more details in the console'))\r\n                console.log('Error: ', e.response.data.error)\r\n            })\r\n            .finally(() => {\r\n                dispatch(setLoading(false))\r\n            })\r\n    }\r\n};","import React from 'react';\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div>\r\n            Loading...\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport s from \"../RecoverPassword/Forgot.module.css\";\r\n\r\n\r\ntype SetPassPropsType = {\r\n    pass: string\r\n    setPass: (pass: string) => void\r\n    pass2: string\r\n    setPass2: (pass2: string) => void\r\n    setPassCallback: () => void\r\n    loading: boolean\r\n    error: string\r\n    success: boolean\r\n};\r\n\r\nconst SetPassword: React.FC<SetPassPropsType> = React.memo((\r\n    {pass, setPass, pass2, setPass2, setPassCallback, loading, error, success}) => {\r\n    return (\r\n        <>\r\n            {success && <div>Password was changed</div> }\r\n            {error && <div className={s.error}>{error}</div>}\r\n            <div><SuperInput value={pass} onChangeText={setPass}/></div>\r\n            <div><SuperInput value={pass2} onChangeText={setPass2}/></div>\r\n            <div><button onClick={setPassCallback} disabled={loading}>Установить пароль</button></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default SetPassword;","import React, {useCallback, useState} from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {setPasswordTC} from \"../../redux/setPasswordReducer\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport SetPassword from \"./SetPassword\";\r\n\r\nconst SetPasswordContainer = React.memo(() => {\r\n        const [pass, setPass] = useState<string>(\"\");\r\n        const [pass2, setPass2] = useState<string>(\"\");\r\n        const {token}: any = useParams();\r\n        const success = useSelector((state: AppStoreType) => state.setPassword.success )\r\n\r\n        const dispatch = useDispatch();\r\n        const setPassCallback = useCallback(\r\n            () => dispatch(setPasswordTC(token, pass, pass2)),\r\n            [pass, pass2, token, dispatch]\r\n        );\r\n        const {loading, error} = useSelector((store: AppStoreType) => store.setPassword);\r\n        return (\r\n            <>\r\n                {loading && <Preloader/>}\r\n                <SetPassword\r\n                    pass={pass} setPass={setPass}\r\n                    pass2={pass2} setPass2={setPass2}\r\n                    setPassCallback={setPassCallback}\r\n                    loading={loading}\r\n                    error={error}\r\n                    success={success}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nexport default SetPasswordContainer;","import React from 'react'\r\nimport SetPasswordContainer from \"./SetPasswordContainer\";\r\n\r\nexport const NewPassword = () => {\r\n    return (\r\n        <div>\r\n            <h1>Смена пароля</h1>\r\n            <SetPasswordContainer/>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { AppStoreType } from \"../../redux/store\";\r\nimport { PATH } from \"../../Routes\";\r\n\r\nexport const Table: React.FC<PropsType> = (props: PropsType) => {\r\n    \r\n    const isRequest = useSelector<AppStoreType, boolean>(state => state.packs.isRequest);\r\n\r\n    //callbacks:\r\n    const UpdateCallback = (id: string) => {\r\n        if (props.update) {\r\n            props.update(id)\r\n        }\r\n    }\r\n    const DeleteCallback = (id: string) => {\r\n        if (props.delete) {\r\n            props.delete(id)\r\n        }\r\n    }\r\n    const PackIdCallback = (packId: string) => {\r\n        if (props.link) {\r\n            props.link(packId)\r\n        }\r\n\r\n    }\r\n\r\n    if (!props.header) {\r\n        return <div>At the moment you don't have any cards. If you are a pack owner - press \"ADD CARD\" or choose another pack</div>\r\n    }\r\n    return (\r\n        <table>\r\n            <thead>\r\n                <tr>\r\n                    {Object.keys(props.header).map(key => <th>{key.toUpperCase()}</th>)}\r\n                    {props.data && <th>BUTTONS</th>}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {props.data.map((el: any) => (\r\n                    <tr key={el._id}>\r\n                        {Object.values(el).map((data: any) => <td>{data}</td>)}\r\n                        <td>\r\n                            {!!props.data\r\n                                && <>\r\n                                    <button\r\n                                        onClick={() => UpdateCallback(el.id)} disabled={isRequest} >Update\r\n                                    </button>\r\n                                    <button\r\n                                        onClick={() => DeleteCallback(el.id)} disabled={isRequest} >Delete\r\n                                    </button>\r\n                                    {props.isLinkToCards && <NavLink\r\n                                        onClick={() => PackIdCallback(el.id)} to={PATH.CARDS} >Cards\r\n                                    </NavLink>}\r\n                                </>}\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\n//types:\r\ntype PropsType = {\r\n    header: any\r\n    data: any\r\n    update: (id: string) => void\r\n    delete: (id: string) => void\r\n    isLinkToCards: boolean\r\n    link?: (packId: string) => void\r\n}","import { instance } from \"./instance\";\r\nimport {PackType} from \"../redux/packsReducer\";\r\n\r\nexport type ResponseGetPacksType = {\r\n    cardPacks: Array<PackType>\r\n    cardPacksTotalCount: number | null\r\n    maxCardsCount: number | null\r\n    minCardsCount: number | null\r\n    page: number | null\r\n    pageCount: number | null\r\n}\r\n\r\nexport const PacksAPI = {\r\n    getPacks(params: any) {\r\n        return instance.get<ResponseGetPacksType>(`/cards/pack`\r\n            + (params.userId != null ? `/?user_id=${params.userId}&` : '/?')\r\n            + (params.packName != null ? `packName=${params.packName}&` : '')\r\n            + (params.min != null ? `min=${params.min}&` : '')\r\n            + (params.max != null ? `max=${params.max}&` : '')\r\n            + (params.sortPacks != null ? `sortPacks=${params.sortPacks}&` : '')\r\n            + (params.page != null ? `page=${params.page}&` : '')\r\n            + (params.pageCount != null ? `pageCount=${params.pageCount}&` : '')\r\n        )\r\n            .then(res => res.data)\r\n    },\r\n    createPack() {\r\n        return instance.post('cards/pack', {\r\n            cardsPack: {\r\n                name: \"created new TestPack\",\r\n            }\r\n        })\r\n            .then(res => res.data);\r\n    },\r\n    updatePack(id: string) {\r\n        return instance.put('cards/pack', {\r\n            cardsPack: {\r\n                _id: id,\r\n                name: \"Pack was updated!\",\r\n            }\r\n        }).then(res => res.data)\r\n    },\r\n    deletePack(id: string) {\r\n        return instance.delete(`cards/pack?id=${id}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import {PacksAPI} from \"../api/packs-api\";\r\n\r\nconst initialState: any = {\r\n    cardPacks: [\r\n        {\r\n            _id: null,\r\n            user_id: null,\r\n            name: null,\r\n            path: null,\r\n            cardsCount: null,\r\n            grade: null,\r\n            shots: null,\r\n            rating: null,\r\n            type: null,\r\n            created: null,\r\n            updated: null,\r\n            __v: null,\r\n        },\r\n    ],\r\n    //дополнить Reducer данными + добавить типы\r\n    packId: null,\r\n    currentPage: 1,\r\n    pageCount: 10,\r\n    totalCount: null as string | null,\r\n    userId: null,\r\n    isRequest: false\r\n}\r\n\r\ntype InitialStateType = typeof initialState;\r\n\r\nexport const packsReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'PACKS_REDUCER/FETCH_PACKS':\r\n            return { ...state, cardPacks: [...action.payload] }\r\n        case 'PACKS_REDUCER/SET_PACK_LINK':\r\n            return { ...state, packId: action.packId }\r\n        case 'PACKS_REDUCER/SET_USER_ID':\r\n            return { ...state, userId: action.userId }\r\n\r\n        case 'PACKS_REDUCER/IS-REQUEST-AC':\r\n            return { ...state, isRequest: action.isRequest }\r\n\r\n        case 'PACKS_REDUCER/SET-CURRENT-PAGE': {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case 'PACKS_REDUCER/SET-TOTAL-COUNT': {\r\n            return {...state, totalCount: action.totalCount}\r\n        }\r\n        case 'PACKS_REDUCER/SET-PAGE-COUNT': {\r\n            debugger\r\n            return {...state, totalCount: action.pageCount}\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//actions\r\nexport const getPacksAC = (packs: any) => ({ type: 'PACKS_REDUCER/FETCH_PACKS', payload: packs } as const);\r\nexport const packIdAC = (packId: any) => ({ type: 'PACKS_REDUCER/SET_PACK_LINK', packId } as const)\r\nexport const setUserId = (userId: any) => ({ type: 'PACKS_REDUCER/SET_USER_ID', userId } as const)\r\n\r\nconst isRequestAC = (isRequest: boolean) => ({type: 'PACKS_REDUCER/IS-REQUEST-AC', isRequest} as const);\r\n\r\n\r\nexport const setCurrentPageAC = (currentPage: number) => ({type: 'PACKS_REDUCER/SET-CURRENT-PAGE', currentPage} as const)\r\nexport const setTotalCountAC = (totalCount: number | null) => ({type: 'PACKS_REDUCER/SET-TOTAL-COUNT', totalCount} as const)\r\nexport const setPageCountAC = (pageCount: number) => ({type: 'PACKS_REDUCER/SET-PAGE-COUNT', pageCount} as const)\r\n\r\n// thunks\r\nexport const getPacksThunk = () => (dispatch: any, getState: any) => {\r\n    const params = {\r\n        userId: getState().packs.userId,\r\n        packName: getState().search.searchByName,\r\n        min: getState().search.minCount,\r\n        max: getState().search.maxCount,\r\n        sortPacks: '0updated',\r\n        page: getState().packs.currentPage,\r\n        pageCount: getState().packs.pageCount,\r\n    }\r\n\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    PacksAPI.getPacks(params)\r\n        .then(response => {\r\n            console.log(response)\r\n            dispatch(getPacksAC(response.cardPacks))\r\n\r\n            dispatch(isRequestAC(false))\r\n\r\n            dispatch(setTotalCountAC(response.cardPacksTotalCount))\r\n\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const createPackThunk = () => (dispatch: any) => {\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    PacksAPI.createPack()\r\n        .then(response => {\r\n            console.log(response)\r\n            const data = response.data\r\n            //dispatch(getPacksAC(data))\r\n            dispatch(getPacksThunk())\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const updatePackThunk = (id: string) => (dispatch: any) => {\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    PacksAPI.updatePack(id)\r\n        .then(response => {\r\n            console.log(response)\r\n            //const data = response.data\r\n            //dispatch(getPacksAC(data))\r\n            dispatch(getPacksThunk())\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n}\r\n\r\nexport const deletePackThunk = (id: string) => (dispatch: any) => {\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    PacksAPI.deletePack(id)\r\n        .then(response => {\r\n            console.log(response)\r\n            //const data = response.data\r\n            //dispatch(getPacksAC(data))\r\n            dispatch(getPacksThunk())\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n// types\r\ntype ActionsType =\r\n    | ReturnType<typeof getPacksAC>\r\n    | ReturnType<typeof packIdAC>\r\n    | ReturnType<typeof setUserId>\r\n\r\n    | ReturnType<typeof isRequestAC>\r\n\r\n    | ReturnType<typeof setCurrentPageAC>\r\n    | ReturnType<typeof setTotalCountAC>\r\n    | ReturnType<typeof setPageCountAC>\r\n\r\nexport type PackType = {\r\n    cardsCount: number | null\r\n    created: Date | null\r\n    deckCover: string | null\r\n    grade: number | null\r\n    more_id: string | null\r\n    name: string | null\r\n    path: string | null\r\n    private: boolean\r\n    rating: number | null\r\n    shots: number | null\r\n    type: string | null\r\n    updated: Date | null\r\n    user_id: string | null\r\n    user_name: string | null\r\n    __v: number | null\r\n    _id: string | null\r\n}\r\n\r\n","import { instance } from \"./instance\"\r\n\r\n\r\nexport const CardsAPI = {\r\n    getCards(cardsPack_id: any, page: any, pageCount: any) {\r\n        return instance.get(`/cards/card` + `/?cardsPack_id=${cardsPack_id}` + `&page=${page}` + `&pageCount=${pageCount}`)\r\n            .then(res => res.data)\r\n    },\r\n    createCard(newCard: any) {\r\n        return instance.post('cards/card', { card: newCard })\r\n            .then(res => res.data)\r\n    },\r\n    updateCard(CurrentCard: any) {\r\n        return instance.put('cards/card', { card: CurrentCard })\r\n            .then(res => res.data)\r\n\r\n    },\r\n    deleteCard(cardId: string) {\r\n        return instance.delete(`cards/card` + `/?id=${cardId}`)\r\n            .then(res => res.data)\r\n    }\r\n}","import { instance } from \"./instance\";\r\n\r\nexport const gradesAPI = {\r\n    updateGrade(data: any) {\r\n        return instance.put<any>('cards/grade', data);\r\n    },\r\n}\r\n\r\n//types\r\nexport type RequestType = {\r\n    grade: number // 1-5 \r\n    card_id: string\r\n }\r\n export type ResponseGradeType = {\r\n    updatedGrade: {\r\n       _id?: string\r\n       cardsPack_id?: string\r\n       card_id: string\r\n       user_id?: string\r\n       grade: number\r\n       shots: number\r\n    }\r\n }","import {CardsAPI} from \"../api/cards-api\";\r\nimport {gradesAPI} from \"../api/grades-api\";\r\n\r\nconst initialState: InitialStateType = {\r\n    cards: [\r\n        {\r\n            answer: null,\r\n            question: null,\r\n            cardsPack_id: null,\r\n            grade: 0,\r\n            rating: null,\r\n            shots: 0,\r\n            type: null,\r\n            user_id: null,\r\n            created: null,\r\n            updated: null,\r\n            __v: null,\r\n            _id: '1',\r\n            more_id: null\r\n        },\r\n    ],\r\n    //дополнить Reucer данными + добавить типы\r\n    page: 1,\r\n    pageCount: 20,\r\n};\r\n\r\nexport const cardsReducer = (\r\n    state: InitialStateType = initialState,\r\n    action: ActionsType\r\n): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"CARDS_REDUCER/FETCH_CARDS\":\r\n            return {...state, cards: [...action.payload]};\r\n        case \"GRADES_REDUCER/UPDATE_GRADE_OF_CARD\":\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((card: any) => {\r\n                    if (card._id === action.payload.updatedGrade.card_id) {\r\n                        return {\r\n                            ...card,\r\n                            grade: action.payload.updatedGrade.grade,\r\n                            shots: action.payload.updatedGrade.shots,\r\n                        };\r\n                    } else {\r\n                        return card;\r\n                    }\r\n                }),\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//actions\r\nexport const getCardsAC = (cards: any) =>\r\n    ({type: \"CARDS_REDUCER/FETCH_CARDS\", payload: cards} as const);\r\nexport const updateGradeOfCardAC = (data: any) =>\r\n    ({type: \"GRADES_REDUCER/UPDATE_GRADE_OF_CARD\", payload: data} as const);\r\n\r\n//thunks\r\nexport const getCardsThunk = () => (dispatch: any, getState: any) => {\r\n    const cardsPack_id = getState().packs.packId;\r\n    const page = getState().cards.page;\r\n    const pageCount = getState().cards.pageCount;\r\n    console.log(cardsPack_id);\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    CardsAPI.getCards(cardsPack_id, page, pageCount)\r\n        .then((response) => {\r\n            console.log(response);\r\n            dispatch(getCardsAC(response.cards));\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const createCardThunk = () => (dispatch: any, getState: any) => {\r\n    const packId = getState().packs.packId;\r\n    console.log(packId);\r\n    const newCard = {\r\n        cardsPack_id: packId,\r\n    };\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    CardsAPI.createCard(newCard)\r\n        .then((response) => {\r\n            console.log(response);\r\n            //dispatch(getCardsAC(response.cards))\r\n            dispatch(getCardsThunk());\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const updateCardThunk = (cardId: string) => (dispatch: any) => {\r\n    const currentCard = {\r\n        _id: cardId,\r\n        question: \"Test question for update current card\",\r\n    };\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    CardsAPI.updateCard(currentCard)\r\n        .then((response) => {\r\n            console.log(response);\r\n            //dispatch(getCardsAC(response.cards))\r\n            dispatch(getCardsThunk());\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const deleteCardThunk = (cardId: string) => (dispatch: any) => {\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    CardsAPI.deleteCard(cardId)\r\n        .then((response) => {\r\n            console.log(response);\r\n            //dispatch(getCardsAC(response.cards))\r\n            dispatch(getCardsThunk());\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : e.message + \", more details in the console\";\r\n            console.log(error);\r\n        });\r\n};\r\n\r\nexport const updateGradeOfCard = (cardId: string, grade: number) => (dispatch: any) => {\r\n    const data = {\r\n        grade: grade,\r\n        card_id: cardId\r\n    }\r\n    //добавить крутилку + дисейбл кнопки (не забыть убрать!)\r\n    gradesAPI.updateGrade(data)\r\n        .then(response => {\r\n            console.log(response)\r\n            //dispatch(getCardsAC(response.cards))\r\n            dispatch(updateGradeOfCardAC({\r\n                updatedGrade: {\r\n                    cardId: response.data.updatedGrade.card_id,\r\n                    grade: response.data.updatedGrade.grade,\r\n                    shots: response.data.updatedGrade.shots,\r\n                }\r\n            }))\r\n        })\r\n        .catch((e) => {\r\n            //сделать какой-нибудь popup для ошибок\r\n            const error = e.response\r\n                ? e.response.data.error\r\n                : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n}\r\n\r\n//types\r\ntype InitialStateType = {\r\n    cards: Array<CardType>\r\n    page: number\r\n    pageCount: number\r\n}\r\ntype ActionsType =\r\n    | ReturnType<typeof getCardsAC>\r\n    | ReturnType<typeof updateGradeOfCardAC>;\r\n\r\nexport type CardType = {\r\n    _id: string ;\r\n    cardsPack_id: string | null;\r\n\r\n    answer: string | null;\r\n    question: string | null;\r\n    grade: number ;\r\n    shots: number ;\r\n\r\n    type: string | null;\r\n    rating: number | null;\r\n    more_id: string | null;\r\n\r\n    created: string | null;\r\n    updated: string | null;\r\n\r\n    user_id?: any\r\n    __v: any,\r\n}\r\n","import {minMaxCountAC} from \"../../redux/searchReducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {Range, getTrackBackground} from 'react-range';\r\n\r\nconst CardsSearchCountDoubleRange: React.FC = () => {\r\n    const minValue = useSelector<AppStoreType, number>(state => state.search.minCount);\r\n    const maxValue = useSelector<AppStoreType, number>(state => state.search.maxCount);\r\n    const values: Array<number> = [minValue, maxValue]\r\n\r\n    const dispatch = useDispatch();\r\n    const setNewCount = (newCount: number[]) => {\r\n        dispatch(minMaxCountAC(newCount[0], newCount[1]));\r\n    }\r\n\r\n    return (\r\n        <Range\r\n            values={values}\r\n            step={1}\r\n            min={0}\r\n            max={13}\r\n            onChange={values => setNewCount(values)}\r\n            renderTrack={({props, children}) => (\r\n                <div\r\n                    onMouseDown={props.onMouseDown}\r\n                    onTouchStart={props.onTouchStart}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '36px',\r\n                        display: 'flex',\r\n                        width: '50%',\r\n                        margin: '10px',\r\n                    }}\r\n                >\r\n                    <div\r\n                        ref={props.ref}\r\n                        style={{\r\n                            height: '5px',\r\n                            width: '100%',\r\n                            borderRadius: '4px',\r\n                            background: getTrackBackground({\r\n                                values: values,\r\n                                colors: ['#ccc', '#548BF4', '#ccc'],\r\n                                min: 0,\r\n                                max: 13\r\n                            }),\r\n                            alignSelf: 'center'\r\n                        }}\r\n                    >\r\n                        {children}\r\n                    </div>\r\n                </div>\r\n            )}\r\n            renderThumb={({index, props, isDragged}) => (\r\n                <div\r\n                    {...props}\r\n                    style={{\r\n                        ...props.style,\r\n                        height: '12px',\r\n                        width: '12px',\r\n                        borderRadius: '1px',\r\n                        backgroundColor: '#FFF',\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        boxShadow: '0px 2px 6px #AAA',\r\n                    }}\r\n                >\r\n                    <div\r\n                        style={{\r\n                            position: 'absolute',\r\n                            top: '-28px',\r\n                            color: '#fff',\r\n                            fontWeight: 'bold',\r\n                            fontSize: '14px',\r\n                            fontFamily: 'Arial,Helvetica Neue,Helvetica,sans-serif',\r\n                            padding: '4px',\r\n                            borderRadius: '4px',\r\n                            backgroundColor: '#548BF4'\r\n                        }}\r\n                    >\r\n                        {values[index].toFixed(0)}\r\n                    </div>\r\n                    <div\r\n                        style={{\r\n                            height: '16px',\r\n                            width: '5px',\r\n                            backgroundColor: isDragged ? '#548BF4' : '#CCC'\r\n                        }}\r\n                    />\r\n                </div>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default CardsSearchCountDoubleRange;","import React, {ChangeEvent} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Table} from \"../../common/Table/Table\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {\r\n    createPackThunk,\r\n    deletePackThunk,\r\n    getPacksThunk,\r\n    packIdAC,\r\n    setCurrentPageAC,\r\n    setUserId,\r\n    updatePackThunk\r\n} from \"../../redux/packsReducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport {getCardsThunk} from \"../../redux/cardsReducer\";\r\nimport {Pagination} from \"@material-ui/lab\";\r\nimport {searchAC} from \"../../redux/searchReducer\";\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport CardsSearchCountDoubleRange from \"../../common/Search/CardsSearchCountDoubleRange\";\r\n\r\nexport const Packs = () => {\r\n\r\n    const packs = (state: AppStoreType) => {\r\n        return state.packs.cardPacks.map((pack: any) => ({\r\n            id: pack._id,\r\n            name: pack.name,\r\n            cardsCount: pack.cardsCount,\r\n            updated: pack.updated,\r\n            author: pack.user_name,\r\n        }))\r\n    }\r\n\r\n    const packsData = useSelector((state: AppStoreType) => packs(state));\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn);\r\n    const isRequest = useSelector<AppStoreType, boolean>(state => state.packs.isRequest);\r\n    const userId = useSelector<AppStoreType, string>(store => store.profile.user._id)\r\n    const isLinkToCards = true;\r\n    const dispatch = useDispatch();\r\n\r\n    React.useEffect(() => {\r\n        dispatch(setUserId(null))\r\n        dispatch(getPacksThunk())\r\n    }, [dispatch])\r\n\r\n    const getMyPacks = () => {\r\n        dispatch(setUserId(userId))\r\n        dispatch(getPacksThunk())\r\n    }\r\n    const getAllPacks = () => {\r\n        dispatch(setUserId(null))\r\n        dispatch(getPacksThunk())\r\n    }\r\n    const addNewPack = () => {\r\n        dispatch(createPackThunk())\r\n    }\r\n    const updatePack = (id: string) => {\r\n        dispatch(updatePackThunk(id))\r\n    }\r\n    const deletePack = (id: string) => {\r\n        dispatch(deletePackThunk(id))\r\n    }\r\n    const linkToCards = (packId: string) => {\r\n        dispatch(packIdAC(packId))\r\n        dispatch(getCardsThunk())\r\n    }\r\n    //Pagination\r\n    const page = useSelector((state: AppStoreType) => state.packs.currentPage);\r\n    const totalCount = useSelector((state: AppStoreType) => state.packs.totalCount);\r\n    const rowsPerPage = useSelector((state: AppStoreType) => state.packs.pageCount);\r\n\r\n    const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n        dispatch(setCurrentPageAC(value))\r\n        dispatch(getPacksThunk())\r\n    };\r\n    //Search\r\n    const onChangeSearch = (text: string) => {\r\n        dispatch(searchAC(text))\r\n    }\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange && onChange(e)\r\n        onChangeSearch && onChangeSearch(e.currentTarget.value)\r\n    }\r\n    const onSearch = () => {\r\n        dispatch(getPacksThunk())\r\n    }\r\n\r\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN}/>\r\n\r\n    return (\r\n        <div>\r\n            <CardsSearchCountDoubleRange/>\r\n            <div>\r\n                <SuperInput onChange={onChangeCallback} placeholder={'Search cards pack name...'}/>\r\n                <button onClick={onSearch}>Search</button>\r\n            </div>\r\n            {/* сделать дизейбл кнопок */}\r\n            <button onClick={getAllPacks} disabled={isRequest} >GET ALL PACKS</button>\r\n            <button onClick={getMyPacks} disabled={isRequest} >GET MY PACKS</button>\r\n            <button onClick={addNewPack} disabled={isRequest} >CREATE NEW PACK</button>\r\n            <Table\r\n                header={packsData[0]}\r\n                data={packsData}\r\n                update={updatePack}\r\n                delete={deletePack}\r\n                isLinkToCards={isLinkToCards}\r\n                link={linkToCards}\r\n            />\r\n            <div>\r\n                <Pagination count={Math.ceil(totalCount / rowsPerPage)}\r\n                            defaultPage={page}\r\n                            boundaryCount={2}\r\n                            onChange={handleChange}\r\n                            showFirstButton={page !== 1}\r\n                            showLastButton/>\r\n            </div>\r\n        </div>\r\n    )\r\n}"," import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { AppStoreType } from '../../redux/store'\r\n\r\n\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const name = useSelector<AppStoreType, string>(store => store.profile.user.name)\r\n    const id = useSelector<AppStoreType, string>(store => store.profile.user._id)\r\n    const email = useSelector<AppStoreType, string>(store => store.profile.user.email)\r\n\r\n\r\n    if(!isLoggedIn){\r\n        debugger\r\n        return <Redirect to={'/login'}/>\r\n    }\r\n    return (\r\n        <div>\r\n            Профайл\r\n            <div>\r\n                name: {name}\r\n            </div>\r\n            <div>\r\n                id: {id}\r\n            </div>\r\n            <div>\r\n                email: {email}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { instance } from \"./instance\"\r\nimport {PATH} from \"../Routes\";\r\n\r\n\r\nexport const ForgotAPI = {\r\n    forgot(email: string) {\r\n        return instance.post<ForgotDataType>('auth/forgot', {\r\n            email,\r\n            from: \"test-front-admin <maxim.one23@gmail.com>\",\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                    password recovery link: \r\n                        <a href='http://localhost:3000/#${PATH.NEW_PASSWORD}/$token$'>link</a>\r\n                    </div>\r\n                    `\r\n        })\r\n    }\r\n}\r\n\r\nexport type ForgotDataType = {\r\n    error: string;\r\n}","import {Dispatch} from \"redux\";\r\nimport {ForgotAPI} from \"../api/forgot-api\";\r\n\r\nexport type ForgotStateType = {\r\n    loading: boolean;\r\n    success: boolean;\r\n    error: string;\r\n}\r\n\r\nexport const ForgotInitState: ForgotStateType = {\r\n    loading: false,\r\n    success: false,\r\n    error: \"\",\r\n};\r\n\r\nexport const forgotReducer = (state = ForgotInitState, action: ForgotActionsType): ForgotStateType => {\r\n    switch (action.type) {\r\n        case \"forgot/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        }\r\n        case \"forgot/SET_LOADING\": {\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            }\r\n        }\r\n        case \"forgot/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                success: action.success,\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n};\r\n\r\nexport type ForgotActionsType = ReturnType<typeof setLoading>\r\n    | ReturnType<typeof setSuccess>\r\n    | ReturnType<typeof setError>\r\n\r\n\r\nexport const setLoading = (loading: boolean) => ({\r\n    type: \"forgot/SET_LOADING\",\r\n    loading,\r\n} as const)\r\nexport const setSuccess = (success: boolean) => ({\r\n    type: \"forgot/SET_SUCCESS\",\r\n    success,\r\n} as const)\r\nexport const setError = (error: string) => ({\r\n    type: \"forgot/SET_ERROR\",\r\n    error,\r\n} as const)\r\n\r\nexport const forgotTC = (email: string) => (dispatch: Dispatch<ForgotActionsType>) => {\r\n    dispatch(setLoading(true))\r\n    return ForgotAPI.forgot(email)\r\n        .then(() => {\r\n            dispatch(setSuccess(true))\r\n        })\r\n        .catch((e) => {\r\n            dispatch(setError(e.response.data.error + ' more details in the console'))\r\n            console.log('Error: ', e.response.data.error)\r\n        })\r\n        .finally(() => {\r\n            dispatch(setLoading(false))\r\n        })\r\n}\r\n\r\n\r\n","import React from \"react\";\r\nimport SuperInput from \"../../SuperComponent/SuperInput/SuperInput\";\r\nimport s from './Forgot.module.css'\r\n\r\ntype ForgotPropsType = {\r\n    email: string\r\n    setEmail: (email: string) => void\r\n    forgot: () => void\r\n    loading: boolean\r\n    error: string\r\n};\r\n\r\nconst Forgot: React.FC<ForgotPropsType> = React.memo(({email, setEmail, forgot, loading, error}) => {\r\n    return (\r\n        <>\r\n            {error && <div className={s.error}>{error}</div>}\r\n            <div><SuperInput  value={email} onChangeText={setEmail} type={\"email\"}/></div>\r\n            <div><button onClick={forgot} disabled={loading}>Отправить</button></div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default Forgot;","import React, {useCallback, useState} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {forgotTC} from \"../../redux/forgotReducer\";\r\nimport Forgot from \"./Forgot\";\r\nimport Preloader from \"../../common/Preloader\";\r\n\r\nconst ForgotContainer = React.memo(() => {\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const error = useSelector((store: AppStoreType) => store.forgot.error);\r\n    const dispatch = useDispatch();\r\n    const forgotCallback = useCallback(\r\n        () => dispatch(forgotTC(email)),\r\n        [email, dispatch]\r\n    );\r\n    const loading = useSelector((store: AppStoreType) => store.forgot.loading)\r\n    return (\r\n        <>\r\n        {loading && <Preloader/>}\r\n        <Forgot\r\n            email={email} setEmail={setEmail}\r\n            forgot={forgotCallback}\r\n            loading={loading}\r\n            error={error}\r\n        />\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ForgotContainer;","import React from 'react'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport ForgotContainer from \"./ForgotContainer\";\r\nimport s from './RecoverPassword.module.css'\r\n\r\n\r\nexport const RecoverPassword = () => {\r\n    const success = useSelector((store: AppStoreType) => store.forgot.success);\r\n\r\n    return (\r\n        <div className={s.wrapper}>\r\n            <div><h1>Восстановление пароля</h1></div>\r\n            {success\r\n                ? <div>click the link in the message in your email</div>\r\n                : <ForgotContainer/>\r\n            }\r\n        </div>\r\n    );\r\n};","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${s.default}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            onClick={() => alert(\"Hello!\")}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        >click</button>\r\n    );\r\n}\r\n\r\nexport default SuperButton;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked); \r\n        onChange && onChange(e);\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label className={s.spanClassName}>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;","import React from 'react'\r\nimport SuperButton from '../../SuperComponent/SuperButton/SuperButton'\r\nimport SuperCheckbox from '../../SuperComponent/SuperCheckbox/SuperCheckbox'\r\nimport SuperInput from '../../SuperComponent/SuperInput/SuperInput'\r\n\r\nexport const Test = () => {\r\n    return (\r\n        <div>\r\n            <SuperInput />\r\n            <SuperButton />\r\n            <SuperCheckbox />           \r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Table } from \"../../common/Table/Table\";\r\nimport { createCardThunk, deleteCardThunk, getCardsThunk, updateCardThunk } from \"../../redux/cardsReducer\";\r\nimport { AppStoreType } from \"../../redux/store\";\r\nimport { PATH } from \"../../Routes\";\r\n\r\nexport const Cards = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const getCardsData = (state: AppStoreType) => {\r\n        return state.cards.cards.map((card: any) => ({\r\n            id: card._id,\r\n            answer: card.answer,\r\n            question: card.question,\r\n            cardsPack_id: card.cardsPack_id,\r\n            grade: card.grade,\r\n            rating: card.rating,\r\n            user_id: card.user_id,\r\n        }))\r\n    }\r\n\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn);\r\n    const cardsData = useSelector((state: AppStoreType) => getCardsData(state));\r\n    const isRequest = useSelector<AppStoreType, boolean>(state => state.packs.isRequest);\r\n    const isLinkToCards = false;\r\n\r\n    const getCards = () => {\r\n        dispatch(getCardsThunk());\r\n    }\r\n    const addCard = () => {\r\n        dispatch(createCardThunk())\r\n    }\r\n    const updateCard = (cardId: string) => {\r\n        dispatch(updateCardThunk(cardId))\r\n    }\r\n    const deleteCard = (cardId: string) => {\r\n        dispatch(deleteCardThunk(cardId))\r\n    }\r\n\r\n    if (!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* сделать дизейбл кнопок */}\r\n            <button onClick={getCards} disabled={isRequest} >GET CARDS</button>\r\n            <button onClick={addCard} disabled={isRequest} >ADD CARD</button>\r\n            <Table\r\n                header={cardsData[0]}\r\n                data={cardsData}\r\n                update={updateCard}\r\n                delete={deleteCard} \r\n                isLinkToCards={isLinkToCards}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, { ChangeEvent } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nexport const InputModal = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [text, setText] = React.useState('');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setText(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Show Input Modal\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Question Modal</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Email Address\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        onChange={onChangeHandler}\r\n                    />\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" >\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {text}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const QuestionModals = () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [answer, setAnswer] = React.useState(false);\r\n\r\n\r\n    const setTrue = () => {\r\n        setAnswer(true)\r\n        setOpen(false);\r\n    }\r\n    const setFalse  = () => {\r\n        setAnswer(false)\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Button variant=\"outlined\" color=\"primary\" onClick={()=>setOpen(true)}>\r\n                Show  Question modal\r\n            </Button>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={()=>setOpen(true)}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        Question modal\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={setTrue } color=\"primary\">\r\n                        Yes\r\n                    </Button>\r\n                    <Button onClick={setFalse} color=\"primary\">\r\n                        No\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n            {answer ? <span>Yes</span> : <span>No</span>}\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n  ref: React.Ref<unknown>,\r\n) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const SimpleModals = () =>{\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Show simple modal\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Simple modal\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport s from './Modals.module.css'\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport const SnackBar = () => {\r\n    const [openSuccess, setOpenSuccess] = React.useState(false);\r\n    const [openError, setOpenError] = React.useState(false);\r\n    const [openMessage, setOpenMessage] = React.useState(false);\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n        setOpenSuccess(false);\r\n        setOpenError(false);\r\n        setOpenMessage(false);\r\n    };\r\n\r\n    return (\r\n        <div >\r\n            <div className={s.item}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenSuccess(true)}>\r\n                    Show success modal\r\n                </Button>\r\n                <Snackbar open={openSuccess} autoHideDuration={4000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"success\">\r\n                        This is a success message!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenError(true)}>\r\n                    Show error modal\r\n                </Button>\r\n                <Snackbar open={openError} autoHideDuration={4000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"error\">\r\n                        This is a error message!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n            <div className={s.item}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={() => setOpenMessage(true)}>\r\n                    Show message modal\r\n                    </Button>\r\n                <Snackbar open={openMessage} autoHideDuration={4000} onClose={handleClose}>\r\n                    <Alert onClose={handleClose} severity=\"info\">\r\n                        This is simple message!\r\n                    </Alert>\r\n                </Snackbar>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { InputModal } from './InputModal';\r\nimport { QuestionModals } from './QuestionModals';\r\nimport { SimpleModals } from './SimpleModal';\r\nimport { SnackBar } from './SnackBar';\r\nimport s from './Modals.module.css'\r\n\r\n\r\nexport const Modals = () => {\r\n\r\n    return (\r\n        <div className={s.modals}>\r\n            <div className={s.item}><SimpleModals /></div>\r\n            <div className={s.item}><QuestionModals /></div>\r\n            <div className={s.item}><InputModal /></div>\r\n            <div className={s.item}><SnackBar /></div>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateGradeOfCard } from \"../../redux/cardsReducer\";\r\n\r\nexport const Grades: React.FC<PropsType> = ({cardId}) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const gradeOfQuestionHandler = (grade: number) => {\r\n        dispatch(updateGradeOfCard(cardId, grade))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick = { () => gradeOfQuestionHandler(1)}>1</button>\r\n            <button onClick = { () => gradeOfQuestionHandler(2)}>2</button>\r\n            <button onClick = { () => gradeOfQuestionHandler(3)}>3</button>\r\n            <button onClick = { () => gradeOfQuestionHandler(4)}>4</button>\r\n            <button onClick = { () => gradeOfQuestionHandler(5)}>5</button>\r\n        </div>\r\n    );\r\n}\r\n\r\n//types\r\ntype PropsType = {\r\n    cardId: string\r\n}","import React, {useEffect, useState} from \"react\"\r\nimport {Grades} from \"../Grades/Grades\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {CardType, getCardsThunk} from \"../../redux/cardsReducer\";\r\n\r\n// export const Learn = () => {\r\n//     const cardId = \"sdafsdf\"\r\n//\r\n//     return (\r\n//         <div>\r\n//             <Grades cardId={cardId}/>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nconst getCard = (cards: CardType[]) => {\r\n    const sum = cards.reduce((acc, card) => acc + (6 - card.grade) * (6 - card.grade), 0);\r\n    const rand = Math.random() * sum;\r\n    const res = cards.reduce((acc: { sum: number, id: number}, card, i) => {\r\n            const newSum = acc.sum + (6 - card.grade) * (6 - card.grade);\r\n            return {sum: newSum, id: newSum < rand ? i : acc.id}\r\n        }\r\n        , {sum: 0, id: -1});\r\n    console.log('test: ', sum, rand, res)\r\n\r\n    return cards[res.id + 1];\r\n}\r\n\r\nexport const Learn = () => {\r\n    const [isChecked, setIsChecked] = useState<boolean>(false);\r\n    const [first, setFirst] = useState<boolean>(true);\r\n    const cards = useSelector((state: AppStoreType) => state.cards.cards);\r\n    // const {cardId} = useSelector((state: AppStoreType) => state.cards.cards._id);\r\n    // const {id}: any = useParams();\r\n\r\n    const [card, setCard] = useState<CardType>({\r\n        _id: 'fake',\r\n        cardsPack_id: '',\r\n\r\n        answer: 'answer fake',\r\n        question: 'question fake',\r\n        grade: 0,\r\n        shots: 0,\r\n\r\n        type: '',\r\n        rating: 0,\r\n        more_id: '',\r\n\r\n        created: '',\r\n        updated: '',\r\n\r\n        __v: '',\r\n    });\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        console.log('LearnContainer useEffect');\r\n\r\n        if (first) {\r\n            dispatch(getCardsThunk());\r\n            setFirst(false);\r\n        }\r\n\r\n        console.log('cards', cards)\r\n        if (cards.length > 0) setCard(getCard(cards));\r\n\r\n        return () => {\r\n            console.log('LearnContainer useEffect off');\r\n        }\r\n    }, [dispatch, card._id, cards, first]);\r\n\r\n    const onNext = () => {\r\n        setIsChecked(false);\r\n\r\n        if (cards.length > 0) {\r\n            debugger\r\n            setCard(getCard(cards));\r\n        } else {\r\n\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            LearnPage\r\n\r\n            <div>{card.question}</div>\r\n            <div>\r\n                <button onClick={() => setIsChecked(true)}>check</button>\r\n            </div>\r\n\r\n            {isChecked && (\r\n                <>\r\n                    <div>{card.answer}</div>\r\n\r\n                    <div>\r\n                        <Grades cardId={card._id}/>\r\n                    </div>\r\n\r\n                    <div><button onClick={onNext}>next</button></div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { Error404 } from './Pages/404/Error404'\r\nimport { CheckIn } from './Pages/CheckIn/CheckIn'\r\nimport { Login } from './Pages/Login/Login'\r\nimport { NewPassword } from './Pages/NewPassword/NewPassword'\r\nimport { Packs } from './Pages/Packs/Packs'\r\nimport { Profile } from './Pages/Profile/Profile'\r\nimport { RecoverPassword } from './Pages/RecoverPassword/RecoverPassword'\r\nimport { Test } from './Pages/Test/Test'\r\nimport {Cards} from \"./Pages/Cards/Cards\";\r\nimport { Modals } from './Pages/modals/Modals'\r\nimport {Learn} from \"./Pages/Learning/Learn\";\r\n\r\nexport const PATH = {\r\n    CHECK_IN: \"/check-in\",\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    PACKS: \"/packs\",\r\n    CARDS: \"/cards\",\r\n    TEST: \"/test\",\r\n    MODALS: \"/modals\",\r\n    LEARN: \"/learn\"\r\n}\r\n\r\nexport const Routes = () => {\r\n    return (\r\n        <div>\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PROFILE} />} />\r\n                <Route path={PATH.CHECK_IN} render={() => <CheckIn />} />\r\n                <Route path={PATH.LOGIN} render={() => <Login />} />\r\n                <Route path={PATH.NEW_PASSWORD+'/:token'} render={() => <NewPassword />} />\r\n                <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n                <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n                <Route path={PATH.PACKS} render={() => <Packs/>} />\r\n                <Route path={PATH.CARDS} render={() => <Cards />} />\r\n                <Route path={PATH.TEST} render={() => <Test />} />\r\n                <Route path={PATH.MODALS} render={() => <Modals />} />\r\n                <Route path={PATH.LEARN} render={() => <Learn />} />\r\n\r\n                <Route render={() => <Error404 />} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { PATH } from './Routes'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.CHECK_IN}>Регистрация</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.LOGIN}>Логин</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.NEW_PASSWORD}>Новый пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.PROFILE}>Профайл</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.RECOVER_PASSWORD}>Восстановить пароль</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.PACKS}>Калоды карточек</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.CARDS}>Карточки</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.TEST}>Test</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.MODALS}>Modals</NavLink>\r\n            </div>\r\n            <div className=\"item\">\r\n                <NavLink to={PATH.LEARN}>Learn</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\nimport './App.css';\nimport { Header } from './Header';\nimport { Routes } from './Routes';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Header />\n        <Routes />\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { loginReducer } from './loginReducer';\r\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {profileReducer} from \"./profileReducer\";\r\nimport { registerReducer } from \"./registerReducer\";\r\nimport {forgotReducer} from \"./forgotReducer\";\r\nimport {setPassReducer} from \"./setPasswordReducer\";\r\nimport {packsReducer} from \"./packsReducer\";\r\nimport { cardsReducer } from './cardsReducer';\r\nimport {searchReducer} from \"./searchReducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profile: profileReducer,\r\n    login: loginReducer,\r\n    register: registerReducer,\r\n    forgot: forgotReducer,\r\n    setPassword: setPassReducer,\r\n    packs: packsReducer,\r\n    cards: cardsReducer,\r\n    search: searchReducer\r\n\r\n});\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store\r\n\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\nwindow.store = store; ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modals\":\"Modals_modals__3yCDt\",\"item\":\"Modals_item__2sx05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Forgot_error__36tR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"Error404_background__xYzT_\",\"textContainer\":\"Error404_textContainer__2KIjv\",\"text\":\"Error404_text__2mE3p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__hkUWb\",\"errorInput\":\"SuperInput_errorInput__NTC8V\",\"error\":\"SuperInput_error__2WgyC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__26VM3\",\"red\":\"SuperButton_red__3wPsZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2I_bw\",\"spanClassName\":\"SuperCheckbox_spanClassName__2Gliw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"Login_error__1XNev\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RecoverPassword_wrapper__2SXsk\"};"],"sourceRoot":""}